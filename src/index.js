// eslint-env node
const fs = require('fs');

const tree = require('./tree');
const helper = require('./helper');

/**
 * The actual command line arguments to evaluate
 */
const commandLineArguments = process.argv.slice(2);

/**
 * The actual main function as iife. Does the main lifting
 */
(async function main() {
    // if there is no config, we can't do anything
    if (commandLineArguments === 0) {
        throw new Error('No config-files present, don\'t know what to do...');
    }
    else if (commandLineArguments > 1) {
        throw new Error('Found more than one param, doesn\'t know what to do. Please provide only one config file path');
    }

    const configFileContent = fs.readFileSync(commandLineArguments[0]);
    const config = JSON.parse(configFileContent);

    if (typeof config.target !== 'string') {
        throw new Error('Could not find any black list target to write to');
    }
    else if (!Array.isArray(config.sources) || config.sources.some((aItem) => typeof aItem !== 'string')) {
        throw new Error('Provided sources is no array of string sources');
    }

    const blackListSources = new Set(config.sources);
    const blackListTarget = config.target;

    for (const source of blackListSources) {
        const sourceData = await helper.readSource(source);
        const lines = sourceData.toString().split('\n');

        for (const line of lines) {
            // skip empty lines and comments
            if (line === '' || line[0] === '#') {
                continue;
            }

            tree.addToTree(line);
        }
    }

    const writeStream = fs.createWriteStream(blackListTarget);

    writeStream.write(`# This file is autogenerated, do not edit!\n`);
    writeStream.write(`# Generated at: ${new Date().toLocaleString()}\n\n`);

    tree.getUrlList().forEach((aItem) => writeStream.write(`${aItem}\n`));

    writeStream.close();
})();
